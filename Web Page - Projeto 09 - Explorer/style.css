*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root{
  --ff-heading: 'Epilogue', sans-serif;

  --hue: 250;
  --bg-primary: hsl(var(--hue), 22%, 20%);
  --fc-primary: hsl(var(--hue), 0%, 100%);
  --fc-secondary: hsla(var(--hue), 50%, 80%);
  --fc-dark: rgb(11, 12, 11);


  font-size: 6.25%;
  --fs-body: 16rem;
  --fs-heading: clamp(40rem, 10rem + 5vw, 56rem); 
  --fs-heading-small: clamp(30rem, 5rem + 3vw, 40rem); 
  
}

body{
  background-color: var(--bg-primary);
  color: var(--fc-primary);

  font-size: var(--fs-body);
}

.page{
  max-width: clamp(330rem, 300rem + 60vw, 1170rem);
  padding: 0 50rem;
  margin: 0 auto;
}


img {
  width: 100%; /* Imagem fica no tamanho da tela */
  height: auto;
}

header{
  margin: 100rem 0 80rem;
  font-family: var(--ff-heading);

  text-align: center;

  animation-name: topdown;
  animation-duration: 700ms;

  /*ou animation: topdpwn 700ms*/;
}

header p{
  color: var(--fc-secondary);
  font-weight: 400;
  text-transform: uppercase;

  line-height: 32rem;
  letter-spacing: 30rem;

  margin-bottom: 17rem;

  margin-left: 30rem;

}

header h1{
  font-weight: 800;
  font-size: var(--fs-heading);
  line-height: 48rem;
}

main{
  display: grid;
  gap: 32rem;

  padding-bottom: 10rem;
  animation: downtop 700ms 350ms backwards;
}

.card{
  position: relative;
}

.card img{
  height: 416rem;
  object-fit: cover; /* Object-fit: quanto um objeto deve se redimensionar para se ajustar ao seu container;*/

  border-radius: 6px;
  transition: transform 200ms; /* transition = propriedade transform/outra tempo para acontecer */
  transition: opacity 200ms;
  /* ou transition: all 200ms*/

  filter: brightness(0.7) saturate(1.5);
}

.card img:hover{
  transform: scale(1.1); /* 0 some 1 tamanho original*/
  opacity: 0.4;
}

.card h2{
  position: absolute; 
  /*Utilizado quando trabalha com sobreposição */ 
  /* Tem um position relative no .card, fazendo com que o h2 seja relativo ao .card */
  bottom: 52rem;
  left: 28rem;

  font-size: var(--fs-heading-small);
  font-weight: 800;

  display: flex; /*Para pode usar os itens abaixo */
  flex-direction: column; /* Fica um abaixo do outro */
  gap: 28rem;
  
}

.card h2 span{
  background-color: var(--fc-primary);
  border-radius: 20rem;

  font-size: var(--fs-body);
  color: var(--fc-dark);
  padding: 0 16rem;

  font-family: var(--ff-heading);
  font-weight: 400;

  width: fit-content; /* Se adequa ao conteudo */
  height: 38rem;
  display: inline-flex;
  align-items: center;

}

@keyframes topdown {
  0% {
    opacity: 0;
    transform: translateY(-25px);
  }
  100%{
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes downtop {
  0%{
    opacity: 0;
    transform: translateY(15px);
  }

  100%{
    opacity: 1;
    transform: translateY(0);
  }
  
}

@media (min-width: 700px){

  main{
    grid-template-columns: 1fr 1fr;
  }

  .card h2{
    font-size: var(--fs-heading);
  }

  /* .page{
    max-width: 1170px;
    padding: 0 50rem;
  } */

}

@media (min-width: 930px){

  main{
    grid-template-areas: "B B A"
    "C C D";
  }

  main div:nth-child(1){
    grid-area: A;
  }

  main div:nth-child(2){
    grid-area: B;
  }

  main div:nth-child(3){
    grid-area: C;
  }

  main div:nth-child(4){
    grid-area: D;
  }

  .card h2{
    font-size: var(--fs-heading);
  }
}



/* 
Keyframes - animações;
animatin-fill-mode:forwards; > Termina a animação com as propriedades de 100%.
animation-direction:reverse > Começa a animação em 100% e vai para 0%.
animation-delay: 200ms > Tempo que demora para começar a animação.
animation-time-fuction: ease/easi-in/easi-in-out > mesma ideia das curvas-bezier;
animation-interetion-coutn: infinito > repetição da animação;
animation-play-state: paused/running.

*/